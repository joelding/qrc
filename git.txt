This quick reference card records usage of GIT.

///////////////////////////////////////////////////////////////////////////

History
	17/04/13	init

///////////////////////////////////////////////////////////////////////////

Clone a repository into a new directory

$ git clone <repository> [<directory>]

///////////////////////////////////////////////////////////////////////////

Checkout a branch or paths to the working tree

$ git checkout -b <new_branch> [<start_point>]


[<start_point>]: default HEAD. For example: origin/HEAD, origin/xxx, origin/yyy

git am path

///////////////////////////////////////////////////////////////////////////

取消已被暫存的檔案

$ git reset HEAD <file>

REFERENCES:
	[1] .4 Git 基礎 - 復原, https://git-scm.com/book/zh-tw/v1/Git-%E5%9F%BA%E7%A4%8E-%E5%BE%A9%E5%8E%9F
	
///////////////////////////////////////////////////////////////////////////

Q: How do I do a 'git status' so it doesn't display untracked files?

$ git status -uno
$ git status --untracked-files=no

REFERENCES:
	[1] https://stackoverflow.com/questions/594757/how-do-i-do-a-git-status-so-it-doesnt-display-untracked-files-without-using

///////////////////////////////////////////////////////////////////////////

Q: How to list staged files? How to remove the staged file?
$ git diff --name-only --cached
$ git rm --cached <filename>

Q: How to remove all staged files?
$ git reset

///////////////////////////////////////////////////////////////////////////

如何使用git 生成patch 和打入patch
http://blog.csdn.net/liuhaomatou/article/details/54410361

$ git format-patch <commit>
$ mkdir patch
$ mv *.path patch/
$ cd <dest dir>
$ git am --abort
$ git am patch/*.patch