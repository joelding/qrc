************************
          TODO
************************

*** 隨手記錄工作上碰到的問題與解答 ***

///////////////////////////////////////////////////////////////////////////

12/11 MON

Documentation/i2c/dev-interface
Note that only a subset of the I2C and SMBus protocols can be achieved by
the means of read() and write() calls. In particular, so-called combined
transactions (mixing read and write messages in the same transaction)
aren't supported. For this reason, this interface is almost never used by
user-space programs.

I2C Tools for Linux
https://i2c.wiki.kernel.org/index.php/I2C_Tools
https://www.kernel.org/pub/software/utils/i2c-tools/

~ # i2c_read 2 0x72 0x0 0x10
*** Board tools : ver0.0.1_20121120 ***
[debug]: {source/utils/cmdshell.c:161}cmdstr:i2c_read
i2c_num:0x2, dev_addr:0x72; reg_addr:0x0; reg_addr_end:0x20; reg_width: 1; data_width: 1.

0x0: 0x1
0x1: 0x0
0x2: 0x36
0x3: 0x91
0x4: 0x20
0x5: 0x0
0x6: 0x19
0x7: 0x64
0x8: 0x37
0x9: 0x80
0xa: 0x0
0xb: 0x1
0xc: 0x80
0xd: 0x0
0xe: 0x0
0xf: 0x4
[END]

osdrv/tools/board/reg-tools-1.0.0/source/tools/btools.c:91:    printf("*** Board tools : %s *** \n",BTOOLS_VERSION);

source/utils/cmdshell.c:161
pCmds is ""
WRITE_LOG_DEBUG();
CMD_SHELL_Run(pCmd, argc, argv);

source/tools/i2c_ops.c:200
i2c_read(int argc, char *argv[]);
include/utils/btools.h

~ # i2c_write 2 0x72 0x5 0xff
~ # i2c_read 2 0x72 0x0 0x20
0x5: 0x3
~ # i2c_write 2 0x72 0x5 0x0
~ # i2c_read 2 0x72 0x0 0x20
0x5: 0x0

实例解析linux内核I2C体系结构
http://www.embedu.org/column/column190.htm



---------------------------------------------------------------------------
Q: How to port to Linux for ADI wrapper.c?

void DBG_Printf(const char *data, ...)
{
}

Read Linux Programmer's Manual "man va_start".

---------------------------------------------------------------------------
Dave's board bootloader configure:

serverip=10.1.9.187
ipaddr=10.1.9.177
gatewayip=10.1.9.254
bootargs=mem=96M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),4M(kernel),27M(rootfs) board=imx274


# ### read sii9136 on I2C2_SCL/SDA of 3519
# i2c_read 2 0x72 0x0 0x10



    configure.ac
    Makefile.am
    the documentation files such as AUTHORS, ChangeLog, COPYING, INSTALL, NEWS, README
    Makefile.am in subdirectories

To address the point of having a "ready-to-install" version brought up by Scharron, some people include a script in the project's root directory, called bootstrap or autogen.sh, that you run once when you check a fresh copy out. You can see an example in one of my projects here. For a simpler project, your autogen.sh really only needs to consist of one line:

autoreconf --install || exit 1

although some people prefer to run ./configure automatically at the end of autogen.sh.

Which files generated by Autotools should I keep in version control repository?
https://stackoverflow.com/questions/3290908/which-files-generated-by-autotools-should-i-keep-in-version-control-repository


Shebang（也称为 Hashbang）是一个由井号和叹号构成的字符序列 #! ，其出现在文本文件的第一行的前两个字符。 类 Unix 操作系统的程序载入器会分析 Shebang 后的内容，将这些内容作为解释器指令，并调用该指令，并将载有 Shebang 的文件路径作为该解释器的参数。
典型的 shebang 解释器指令：

    #!/bin/sh—使用 sh，即 Bourne shell 或其它兼容 shell 执行脚本
    #!/bin/csh—使用 csh，即 C shell 执行
    #!/usr/bin/perl -w—使用带警告的 Perl 执行
    #!/usr/bin/python -O—使用具有代码优化的 Python 执行
    #!/usr/bin/php—使用 PHP 的命令行解释器执行






///////////////////////////////////////////////////////////////////////////

12/08 FRI

Sent Jerry Hsiao an email to ask whether HiTool version relates to chip version.







///////////////////////////////////////////////////////////////////////////

12/07 THU

Q: How is ADI source code organized? How to re-write into kernel modules?

Q: Why the configure I made last night does not have a help such as the following statement?
--build=BUILD           configure for building on BUILD [BUILD=HOST]
--host=HOST             configure for HOST [guessed]
--target=TARGET         configure for TARGET [TARGET=HOST]

Autotools Tutorial, https://www.lrde.epita.fr/~adl/autotools.html
使用 GNU Libtool 创建库 by 吴小虎, https://www.ibm.com/developerworks/cn/aix/library/1007_wuxh_libtool/index.html << This article is very well written. "结合 Autoconf 和 Automake 使用 Libtool"

Library Versioning, https://autotools.io/libtool/version.html
lib_LTLIBRARIES = libtest-1.0.la
libtest_1_0_la_LDFLAGS = -version-info 0:0:0
The three numbers stand for CURRENT:REVISION:AGE
The formula for calculating the file numbers on Linux and Solaris is (C - A).(A).(R)




///////////////////////////////////////////////////////////////////////////

12/06 WED

Q: How to compile ADI source code? 


REFERENCES:
	[1] GNU AUTOCONF, AUTOMAKE, AND LIBTOOL, by Gary V. Vaughan, Ben Elliston, Tom Tromey and Ian Lance Taylor, New Riders publishing, 2000, http://www.sourceware.org/autobook/
	[2] GNU Make, Autotools, CMake 簡介 by Wen Liao, https://www.slideshare.net/zzz00072/gnu-make-autotools-cmake
	[3] GNU Build System, https://en.wikipedia.org/wiki/GNU_Build_System
	[4] GNU Autoconf - Creating Automatic Configuration Scripts, https://www.gnu.org/software/autoconf/manual/autoconf.html
	[5] Automake manual, https://www.gnu.org/software/autoconf/manual/automake.html
	[6] Libtool manual, https://www.gnu.org/software/libtool/manual/libtool.html
	
	
SOP: see https://upload.wikimedia.org/wikipedia/commons/8/84/Autoconf-automake-process.svg
oval: tool/command
square: generated file 
Require modification: configure.ac, Makefile.am

$ autoscan

$ cp configure.scan configure.ac

$ # EDIT configure.ac

$ aclocal

$ autoheader

$ touch Makefile.am # in all nodes of the tree

$ #autoconf # generate configure
$ autoreconf -i

$ automake # keep running 'automake' until all errors are fixed

Makefile.am

	SUBDIRS = ...


Cross-Compilation

	--build=build: The system on which the package is built. (No need to specify)
	--host=host: The system where built programs and libraries will run. 
	--target=target: When building compiler tools: the system for which the tools will create output. 

	$ ./configure --host=arm-hisiv500-linux



    The build machine, where the toolchain is built.
    The host machine, where the toolchain will be executed.
    The target machine, where the binaries created by the toolchain are executed.

Four common build types are possible for toolchains are:

    Native build i.e. BUILD==HOST==TARGET
    Used to build normal gcc for workstation. e.g. BUILD==HOST==TARGET==x86

    Cross-build i.e. BUILD==HOST!=TARGET
    Used to build toolchain that works on your workstation but generates binary for target. e.g. BUILD==HOST==x86 TARGET==arm

    Cross-native build i.e. BUILD!=HOST==TARGET
    Used to toolchain that works on your target and generates binary for target. e.g BUILD==x86 HOST==TARGET==ARM

    Canadian toolchain i.e. BUILD!=HOST!=TARGET
    Used to build ARCHITECTURE A a toolchain runs on B and generates binary for architecture C. e.g.BUILD==x86 HOST==mac TARGET==arm
    
    You will find above so depending on what you want to do, you need to set it for cross compiling. If all options are available, then you want to execute on arm target then set --host={your toolchain triplet} --target={your toolchain triplet}.

For example, if you are using arm-none-linux-gnueabi-gcc, set --host=arm-none-linux-gnueabi --target=arm-none-linux-gnueabi. This will write to your makefile. Finally, generated executable will run on target. For --build this will be automatically set, no need to worry.

How to determine host value for configure when using cross compiler, https://stackoverflow.com/questions/21990021/how-to-determine-host-value-for-configure-when-using-cross-compiler

///////////////////////////////////////////////////////////////////////////

12/05 TUE

Q: Is it possble to compile ADI software package with autotools?



*** CFLAGS was changed in "/home/a003257/avm/t533c/T533C_40/drv/extdrv/adv7842/Makefile". Fix it to use ccflags-y.  Stop.

CFLAGS should be changed into EXTRA_CFLAGS.
ccflags-y += $(EXTRA_CFLAGS) $(CFLAGS)

export KBUILD_NOPEDANTIC=1


TODO: Documentation/kbuild/makefiles.txt

$ sudo echo 7 > /proc/sys/kernel/printk
bash: /proc/sys/kernel/printk: Permission denied
bash权限不够
$ sudo sh -c "echo 7 > /proc/sys/kernel/printk"

REFERENCES:
	避免’sudo echo x >’ 时’Permission denied’
	[link] http://blog.csdn.net/hejinjing_tom_com/article/details/7767127
	
source insight 3.50.0083	
SI3US-205035-36448
SI3US-466908-65897
SI3US-368932-59383
SI3US-065458-30661
SI3US-759512-70207 

$ find . -name "*" -type f -exec dos2unix {} \;



Autotools Tutorial for Beginners 
[link] http://markuskimius.wikidot.com/programming:tut:autotools/


https://www.slideshare.net/zzz00072/gnu-make-autotools-cmake?ref=https://blog.wu-boy.com/2014/09/introduction-to-gnu-make-autotools-cmake/

https://www.slideshare.net/antonywcl/gnu-build-system-52742400?qid=9f2bb907-c5d9-4e6e-8995-3d3aab1e4786&v=&b=&from_search=6

configure.ac: write on your own or auto-generate with autoscan
Makefile.am: one each subdir:w

step 1. autoscan
step 2. mv configure.scan configure.ac




///////////////////////////////////////////////////////////////////////////

12/04 MON

Q: from the camera driver on the DMB, can I collect knowledge of V4L2 driver?

Q: How come HiSilicon is not using anything from V4L2?
in hi3519v101_big_little_defconfig
CONFIG_MEDIA_SUPPORT=m
#
# Multimedia core support
#
CONFIG_MEDIA_CAMERA_SUPPORT=y
CONFIG_VIDEO_DEV=m
CONFIG_VIDEO_V4L2=m
CONFIG_VIDEOBUF2_CORE=m
CONFIG_VIDEOBUF2_MEMOPS=m
CONFIG_VIDEOBUF2_VMALLOC=m



///////////////////////////////////////////////////////////////////////////

11/30 THU

Allwinner H6 vs. RK3288/3399 vs Amlogic S905X



HOW TO VERIFY HDMI INPUT TO HDMI OUTPUT?
-> BT1120 port is not verified yet!





///////////////////////////////////////////////////////////////////////////

11/29 WED




///////////////////////////////////////////////////////////////////////////

11/27 MON

///////////////////////////////////////////////////////////////////////////

11/24 FRI

build for x64 to cross-reference {

	~/avm/AVT_gstreamer_SDK_x64

}

./bin/gst-launch-1.0 -v filesrc location=./128_720_2M_long.ts ! avthlssink
init 


** (gst-launch-1.0:25465): CRITICAL **: gst_base_sink_init: assertion 'pad_template != NULL' failed
WARNING: erroneous pipeline: could not link filesrc0 to averhlssink0

$ ./bin/gst-inspect-1.0 avthlssink
init 


** (gst-inspect-1.0:25315): CRITICAL **: gst_base_sink_init: assertion 'pad_template != NULL' failed



///////////////////////////////////////////////////////////////////////////

11/22 WED

0910 
{
git clone ssh://a003315@CodeReview-New.avermedia.com:29418/Cross_Platform/SDK/AVT_gstreamer_sdk

arm-hisiv500-linux-uclibcgnueabi-gcc

WORKING DIRCTORY: ~/avm/other_rds/AVT_gstreamer_sdk/

./recipes/avt-plugin.recipe:8:    remotes = {'origin': 'ssh://a000000@CodeReview-New.avermedia.com:29418/Cross_Platform/SDK/avt-plugin'}

./recipes/libftl.recipe:9:    remotes = {'origin': 'ssh://a000000@CodeReview-New.avermedia.com:29418/Cross_Platform/SDK/ftl-sdk'}

./recipes/libhls.recipe:8:    remotes = {'origin': 'ssh://a000000@CodeReview-New.avermedia.com:29418/Cross_Platform/SDK/libhls'}

./recipes/libremovebg.recipe:8:    remotes = {'origin': 'ssh://a000000@CodeReview-New.avermedia.com:29418/Cross_Platform/SDK/libremovebg'}
grep: ./recipes/librsvg: Is a directory

./recipes/librtmp.recipe:9:    remotes = {'origin': 'ssh://a000000@CodeReview-New.avermedia.com:29418/Cross_Platform/SDK/librtmp'}



Build GStreamer with cerbero

$ git clone git://anongit.freedesktop.org/gstreamer/cerbero
$ ./cerbero-uninstalled -c config/xxx.cbc bootstrap

$ ./cerbero-uninstalled list # list available recipes
$ ./cerbero-uninstalled list-packages # list available packages
$ ./cerbero-uninstalled wipe # Wipes everything to restore the build system
$ ./cerbero-uninstalled bootstrap : 下载并安装当前环境下编译时所需工具
$ ./cerbero-uninstalled build <recipe> : 编译某个recipe，包括其依赖项
$ ./cerbero-uninstalled buildone <recipe> : 编译某个recipe，不包括其依赖项
$ ./cerbero-uninstalled cleanone <recipe> : 清理某个recipe


$ ./cerbero-uninstalled -c config/xxx.cbc package gstreamer-1.0


reference:
* Building from source using Cerbero [link](https://gstreamer.freedesktop.org/documentation/installing/building-from-source-using-cerbero.html)
* GStreamer SDK 1.0 Build Via Cerbero [link](http://www.jianshu.com/p/7863404c1909)

import os
from cerbero.config import Platform, Architecture, Distro, DistroVersion

target_platform = Platform.LINUX
target_distro = Distro.NONE
target_distro_version = DistroVersion.NONE_UCLIBC
target_arch = Architecture.ARM
variants = ['noalsa', 'nox11', 'nopulse', 'nocdparanoia', 'nosdl',
            'nov4l2', 'notestspackage', 'nopython']
host = 'arm-hisiv500-linux'
tool_prefix = '%s-' % host
allow_parallel_build = True



diff --git a/gstreamer_src/cerbero/recipes/glib.recipe b/gstreamer_src/cerbero/recipes/glib.recipe
index f231d6d..f87359a 100644
--- a/gstreamer_src/cerbero/recipes/glib.recipe
+++ b/gstreamer_src/cerbero/recipes/glib.recipe
@@ -138,6 +138,7 @@ class Recipe(recipe.Recipe):
             path2 = None
             use_old_uri_scheme = False
             self.configure_options += ' --disable-selinux'
+            self.configure_options += ' --with-libiconv=gnu'
             # Old Debian/Ubuntu
             if self.config.target_distro_version in [DistroVersion.DEBIAN_SQUEEZE,
                                                      DistroVersion.UBUNTU_LUCID,


Recipe 'gdk-pixbuf' failed at the build step 'compile'
Select an action to proceed:
[0] Enter the shell
[1] Rebuild the recipe from scratch
[2] Rebuild starting from the failed step
[3] Skip recipe
[4] Abort


--- test-coredump-unwind.c	2017-10-13 11:13:45.740446355 +0800
+++ build/sources/linux_arm/libunwind-1.1/tests/test-coredump-unwind.c	2017-10-13 11:16:53.104935412 +0800
@@ -57,7 +57,9 @@
 #include <grp.h>
 
 /* For SIGSEGV handler code */
+#ifndef __UCLIBC__
 #include <execinfo.h>
+#endif
 #include <sys/ucontext.h>
 
 #include <libunwind-coredump.h>
@@ -238,6 +240,7 @@
 			ip);
 
   {
+#ifndef __UCLIBC__
     /* glibc extension */
     void *array[50];
     int size;
@@ -245,6 +248,7 @@
 #ifdef __linux__
     backtrace_symbols_fd(array, size, 2);
 #endif
+#endif
   }
 
   _exit(1);


Recipe 'webrtc-audio-processing' failed at the build step 'compile'
Select an action to proceed:
[0] Enter the shell
[1] Rebuild the recipe from scratch
[2] Rebuild starting from the failed step
[3] Skip recipe
[4] Abort


Configuring included Libav instance with args --prefix=/home/a003257/avm/other_rds/AVT_gstreamer_sdk/gstreamer_src/cerbero/build/dist/linux_arm         --enable-static --enable-pic         --disable-avdevice --disable-postproc         --disable-programs --disable-ffserver --disable-ffplay --disable-ffprobe --disable-ffmpeg         --disable-encoder=flac --disable-protocols --disable-devices         --disable-network --disable-hwaccels --disable-dxva2 --disable-vdpau         --disable-filters --enable-filter=yadif --disable-doc --disable-vda --disable-d3d11va --disable-dxva2         --disable-audiotoolbox --disable-videotoolbox --disable-vaapi --disable-crystalhd         --disable-mediacodec --disable-nvenc --disable-mmal --disable-omx         --disable-omx-rpi --disable-cuda --disable-cuvid --disable-libmfx         --disable-libnpp --disable-iconv --disable-jni --enable-optimizations --enable-cross-compile         --target-os=linux-uclibcgnueabi --arch=arm --cross-prefix=arm-hisiv500-linux-uclibcgnueabi- --ar="$AR" --as="$CC" --cc="$CC" --ld="$CC" --nm="$NM" --disable-ffmpeg 
Unknown OS 'linux-uclibcgnueabi'.

If you think configure made a mistake, make sure you are using the latest
version from Git.  If the latest version fails, report the problem to the
ffmpeg-user@ffmpeg.org mailing list or IRC #ffmpeg on irc.freenode.net.
Include the log file "config.log" produced by configure as this will help
solve the problem.
config.status: error: Failed to configure embedded Libav tree

Recipe 'gst-libav-1.0' failed at the build step 'configure'

export OS=linux

./build/sources/linux_arm/gst-libav-1.0-1.12.2/ChangeLog:2990:	  configure: Chose right target-os for iOS
./build/sources/linux_arm/gst-libav-1.0-1.12.2/ChangeLog:6528:	  to parameters like --with-ffmpeg-extra-configure=" --target-os=linux
./build/sources/linux_arm/gst-libav-1.0-1.12.2/configure:18250:        --target-os=$target_os --arch=$host_cpu --cross-prefix=$host_alias-"


export GST_PLUGIN_PATH=XXX/lib/gstreamer-1.0
export LD_LIBRARY_PATH=XXX/lib


 ./bin/gst-inspect-1.0 --version
 
 gst-inspect-1.0 [OPTION] [PLUGIN|ELEMENT]
 
-a, --print-all

avthlssink-> segmentation fault

PACKED FILE: linux_arm_7112214.tar.bz2

}


Q: linux kernel module md5.ko. Can't build in 3516A?


///////////////////////////////////////////////////////////////////////////

11/21 TUE

Q (17:30)
How to enable an embedded linux board mount a remote shared folder on windows system?
for NAS
- Linux PC need to install samba-client samba-common cifs-utils to mount
q: is there a cifs.ko? Yes. 
https://www.kernel.org/doc/readme/Documentation-filesystems-cifs-README


Q (14:25)
How to build gstreamer so that the libraries can search dependencies with relative path instead of absolute path?




http://www.jianshu.com/p/7863404c1909




linux_arm_20171121_1100.tar.bz2






///////////////////////////////////////////////////////////////////////////

11/20 MON

Official cerbero of gstreamer for test build: ~/avm/t533c/tmp

https://github.com/GStreamer/gstreamer.git
https://github.com/GStreamer/cerbero.git

working directory: tmp/freedesktop/cerbero

https://github.com/flexVDI/cerbero
https://github.com/EricssonResearch/cerbero

cerbero is a build system written by GStreamer developers to build all GStreamer dependencies, GStreamer itself and package it up into nice platform-specific SDK-like binary files.


https://github.com/GStreamer/cerbero




cerbero is a multi-platform build system for Open Source projects that builds
and creates native packages for different platforms, architectures and distributions.

Projects are defined using recipes files (.recipe), which provides a description
of the project being built such as name, version, licenses, sources and the way
it's built. It also provide listing of files, which is later used for the packaging.

Packages are defined using packages files (.package), describing the package name,
version, license, maintainer and other fields used to create the packages. A
package wraps a list of recipes, from which the list of files belonging to the
package will be extracted.


HISILICON HAS ITS OWN GIT !!!
https://github.com/hisilicon

---------------------------------------------------------------------------
Traceback (most recent call last):
  File "./cerbero-uninstalled", line 8, in <module>
    from cerbero.main import main
  File "./cerbero/main.py", line 34, in <module>
    from cerbero import config, commands
  File "./cerbero/config.py", line 25, in <module>
    from cerbero.utils import _, system_info, validate_packager, to_unixpath,\
  File "./cerbero/utils/shell.py", line 41, in <module>
    PLATFORM = system_info()[0]
  File "./cerbero/utils/__init__.py", line 154, in system_info
    raise FatalError("Distribution '%s' not supported" % str(d))
cerbero.errors.FatalError: Fatal Error: Distribution '('Ubuntu', '16.04', 'xenial')' not supported
---------------------------------------------------------------------------
16.04 is not a proper os for building gstreaemr !!!


HP 6200 setup VT-x
	F10 enter BIOS
	Security->System Security
	Enable Virtualization Technology
	Save and restart
	
	
	
	


5.0.40_Ubuntu r115130
File->Preferences->Network->Host-only Networks
Add "vboxnet0"



Recompile in 14.04

Patch uclibc for compiling glib
target/usr/include/stdlib.h:621:#define mkostemp(x,y) mkstemp(x)

GIT checkout tag and then form a branch
git checkout <tag_name>
git checkout -b <branch_name>

cerbero's README file

How do I check gstreamer version?
gst-launch-1.0 --version

libtool: Version mismatch error.  This is libtool 2.4.6, but the
libtool: definition of this LT_INIT comes from libtool 2.4.2.
libtool: You should recreate aclocal.m4 with macros from libtool 2.4.6
libtool: and run autoconf again.
make[3]: *** [libgstavthlssink_la-gstavthlssink.lo] Error 63

In the root directory of where the issue happens:
~/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/linux_arm/avt-plugin-None$ autoreconf --force --install

$autoreconf --force --install
./configure
make

GstAppSrc — Easy way for applications to inject buffers into a pipeline

$ grep -n 'gst_app_src' *
Binary file libgstapp-1.0.a matches
Binary file libgstapp-1.0.so matches
Binary file libgstapp-1.0.so.0 matches
Binary file libgstapp-1.0.so.0.1202.0 matches
Binary file libgstbasecamerabinsrc-1.0.so matches
Binary file libgstbasecamerabinsrc-1.0.so.0 matches
Binary file libgstbasecamerabinsrc-1.0.so.0.1202.0 matches



Cross-compilation of GStreamer
https://gstreamer.freedesktop.org/documentation/installing/building-from-source-using-cerbero.html

1700 use armv7 to compile again


gst-inspect-1.0 [OPTION] [PLUGIN|ELEMENT]
-a, --print-all

Print all plugins and elements

compiling libremovebg:export CROSS_COMPILE=
compiling librtmp avt_plugin: 
export RTMP_LIBS=-L$(libdir} -lrtmp -lz 
export RTMP_CFLAGS=-I${incdir}

///////////////////////////////////////////////////////////////////////////

11/17 FRI



WORKDING DIRECTORY: ~/avm/AVT_gstreamer_SDK
BRANCH: uclibc

# config/cross-lin-hisiv500.cbc







1930: build to 30/37 ctrl-c break
todo: continue to compile to end; add base package

[(33/37) librtmp -> compile ]
[(33/37) librtmp -> install ]
[(33/37) librtmp -> post_install ]
[(34/37) curl -> fetch ]
-----> Fetching tarball https://curl.haxx.se/download/curl-7.55.1.tar.gz to /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/local/curl-7.55.1/curl-7.55.1.tar.gz
[(34/37) curl -> extract ]
-----> Extracting tarball to /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/linux_arm/curl-7.55.1
Unpacking /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/local/curl-7.55.1/curl-7.55.1.tar.gz in /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/linux_arm
[(34/37) curl -> configure ]
[(34/37) curl -> compile ]
[(34/37) curl -> install ]
[(34/37) curl -> post_install ]
[(35/37) libhls -> fetch ]
[(35/37) libhls -> extract ]
[(35/37) libhls -> configure ]
[(35/37) libhls -> compile ]
[(35/37) libhls -> install ]
[(35/37) libhls -> post_install ]
[(36/37) avt-plugin -> fetch ]
[(36/37) avt-plugin -> extract ]
[(36/37) avt-plugin -> configure ]
-----> copying /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/data/autotools/config.guess to /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/linux_arm/avt-plugin-None/config.guess
-----> copying /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/data/autotools/config.sub to /home/a003257/avm/AVT_gstreamer_SDK/gstreamer_src/cerbero/build/sources/linux_arm/avt-plugin-None/config.sub
[(36/37) avt-plugin -> compile ]
[(36/37) avt-plugin -> install ]
[(36/37) avt-plugin -> post_install ]
WARNING: No specific packager available for the distro version none_uclibc, using generic packager for distro none
-----> Creating package for gstreamer-1.0
WARNING: Some libraries weren't found while searching!
libgstgl-1.0
WARNING: Some libraries weren't found while searching!
libwebrtc_audio_processing
WARNING: Some libraries weren't found while searching!
libgstvalidate-preload-1.0
***** Error running 'package' command:
The following files required by this package are missing:
 lib/gstreamer-1.0/libgstopengl.so
lib/gstreamer-1.0/libgstaudiovisualizers.so



///////////////////////////////////////////////////////////////////////////
11/16







avm/AVerCasterHDDuet/RT288x_SDK/source/linux-2.6.21.x/drivers/media/avermedia/f239_fmb_driver/ITE6604/hdmirx.c




http://free-electrons.com/pub/conferences/2016/elce/belloni-alsa-asoc/






https://youtu.be/kb1yAt9d2k8



1. Discoverable: for example PCI, USB
2. Non-discoverable: for example I2C, SPI

Platform devices are inherently not discoverable, i.e. the hardware cannot say “Hey! I’m present!” to the software. Unlike PCI or USB devices, I2C devices are not enumerated at the hardware level (at run time). Instead, the software must know (at compile time) which devices are connected on each I2C bus segment. So USB and PCI are not platform devices.

[link](https://kerneltweaks.wordpress.com/tag/platform-data/) Platform Device and Platform Driver @ Linux. Written in 2014, saying about drivers before device tree was invented.

The platform device API by Corbet [link](https://lwn.net/Articles/448499/)
"Platform devices and device trees" by Corbet [link](https://lwn.net/Articles/448502/)


./arch/arm/boot/dts/hisi-hi3519v101-hmp-demb.dts
./arch/arm/boot/dts/hisi-hi3519v101-demb.dts
./arch/arm/boot/dts/hisi-hi3519v101-hmp-demb.dtb
./arch/arm/boot/dts/hisi-hi3519v101.dtsi

Q: hisi-hi3519v101-demb.dts and hisi-hi3519v101-hmp-demb.dts - which is in use? [solved]
Q: Which device tree is the Hi3519V101 demo board using? [solved]
	./arch/arm/boot/dts/hisi-hi3519v101-hmp-demb.dts

Q: How is DTS compiled?
	It is compiled along with the kernel source code.
	arch/arm/boot/dts/Makefile:97 dtb-$(CONFIG_ARCH_HI3519V101) += hisi-hi3519-hmp-demb.dtb:
	CONFIG_ARCH_HI3519V101

///////////////////////////////////////////////////////////////////////////
11/15

commit 67f05ca102686256bdcf30081621427cda577819
Author: Joel Ding <joel.ding@avermedia.com>
Date:   Wed Nov 15 17:07:36 2017 +0800

        modified:   avt_gstreamer_sdk_uclibc.tgz

Q: How are multiple audio channels arranged in I2S[0:3]?








///////////////////////////////////////////////////////////////////////////
11/14

google search: up/qup6/d9/z8/103/
found WM8731 dev board

Q: SII9136 no driver source code?
	HDMI TX example drivers/media/i2c/adv7511.c //ADV7511 HDMI TX


Device Drivers
	-> Multimedia support (MEDIA_SUPPORT [=y]) 
		-> Encoders, decoders, sensors and other helper chips


Q: How do I build a single in-tree kernel module?
	ARCH=arm CROSS_COMPILE=arm-hisiv500-linux- make M=`pwd`/drivers/media/i2c/it6604 


Hi3519V101 i2c2 to tlv320aic3101
	disable JTAG: R72:4.7K; R74:NC 
	jump wire: R82/I2C2_SCL; R83/I2C2_SDA
	
	J15.5: I2S_MCLK (original JTAG_TCK)  R53:NC
	J15.6: I2S_SD_TX (original JTAG_TDO)  R71:NC
	J15.4: I2S_BCLK_TX (original JTAG_TMS)  R70:NC
	J15.2: I2S_WS (original JTAG_TRSTN)  R95:NC R56:NC
	J15.9: GNC
	J15.10: GND

I2S_SD_RX JTAG_TDI J15.3 R57:NC  




///////////////////////////////////////////////////////////////////////////
11/13

Q: How to revert files in a git to a certain commit?

	mpp_big-little/sample/common/sample_comm.h
	mpp_big-little/sample/common/sample_comm_audio.c
	need to be recovered

	TODO: compare with original common codes






///////////////////////////////////////////////////////////////////////////////
11/10

Usage:
  dm-tool [OPTION...] COMMAND [ARGS...] - Display Manager tool

Options:
  -h, --help        Show help options
  -v, --version     Show release version
  --session-bus     Use session D-Bus

Commands:
  switch-to-greeter                                    Switch to the greeter
  switch-to-user USERNAME [SESSION]                    Switch to a user session
  switch-to-guest [SESSION]                            Switch to a guest session
  lock                                                 Lock the current seat
  list-seats                                           List the active seats
  add-nested-seat [--fullscreen|--screen DIMENSIONS]   Start a nested display
  add-local-x-seat DISPLAY_NUMBER                      Add a local X seat
  add-seat TYPE [NAME=VALUE...]                        Add a dynamic seat



  * cross compile alsa utils
./configure --host=arm-hisiv500-linux 
--disable-python \
--prefix=/mnt/alsa_install \
--with-alsa-inc-prefix=/nfsshare/mnt/alsa_install/include \
--with-alsa-prefix=/nfsshare/mnt/alsa_install/lib \
--disable-alsamixer \
--disable-xmlto
    make; make install DESTDIR=/nfsshare

ebaina [求助] alsa-utils 和 aplay 移植到嵌入式系统 [link](http://bbs.ebaina.com/thread-3856-1-1.html)

# aplay -l
**** List of PLAYBACK Hardware Devices ****
card 0: PCH [HDA Intel PCH], device 0: ALC662 rev1 Analog [ALC662 rev1 Analog]
  Subdevices: 1/1
  Subdevice #0: subdevice #0
card 0: PCH [HDA Intel PCH], device 3: HDMI 0 [HDMI 0]
  Subdevices: 1/1
  Subdevice #0: subdevice #0

# ls /dev/snd/
timer

 # cat /proc/asound/cards 
--- no soundcards ---

# cat /proc/asound/devices 
 33:        : timer

# ./aplay -l
aplay: device_list:268: no soundcards found...


[link](http://free-electrons.com/doc/legacy/audio/embedded_linux_audio.pdf)


vim zM: close all; zR: open all; 
zm: close the source file by one more level; zr: open the source file by  one more level



///////////////////////////////////////////////////////////////////////////////
11/09

# ALSA
  * Advanced Linux Sound Architecture
  * a software framework of the Linux kernel
  * provides an application programming interface (API) 
  * for sound card device drivers
  * bundles a user-space library for application developers

  * cross compile alsa lib
    ./configure --host=arm-hisiv500-linux --disable-python --prefix=/mnt/alsa_install
    make; make install DESTDIR=/nfsshare

references:
1. Advanced Linux Sound Architecture (ALSA) project homepage 
  [link](https://www.alsa-project.org/)
2. alsa-lib及alsa-utils成功移植
  [link](http://blog.sina.com.cn/s/blog_7d7e9d0f0101lqlp.html)
3. arm cross compile issue 
  [link](https://stackoverflow.com/questions/36195926/alsa-util-1-1-0-arm-cross-compile-issue)

ALSA_CONFIG_PATH



/mnt # usb 2-1: new SuperSpeed USB device number 7 using xhci-hcd
usb 2-1: LPM exit latency is zeroed, disabling LPM.
usb 2-1: Int endpoint with wBytesPerInterval of 1024 in config 1 interface 2 altsetting 0 ep 133: setting to 64
uvcvideo: Found UVC 1.00 device 1E04-INOGENI 4K2USB3 (2997:0004)
hid-generic 0003:2997:0004.0002: device has no listeners, quitting


uvcvideo: Found UVC 1.00 device AVerMedia USB Device (07ca:0110)
uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling workaround.


///////////////////////////////////////////////////////////////////////////////



一般在以下情況, 我們會進行移植 Linux Kernel 的動作.
1. 將新版 Linux Kernel 移植到全新 SoC 上
  開發人員為 SoC 廠商(e.g. MTK, TI, Allwinner) R&D engineer.
  在此階段的移植, 需要寫 dtsi, low-level code (位於 arch// 底下) 以及 SoC 相關的底層驅動程式. 並且須確保 SoC 功能運行正常.
2. 將新版 Linux Kernel 移植到全新平台上
  開發人員為硬體廠的軟體 R&D engineer, 開發板 (e.g. beagleboard, RPi) 上游開發人員或者是一些 software consultant.
  在此階段的移植, 需要建立 dts 來描述硬體資訊, 並適度修改 dtsi. 此外也需要根據硬體/ 週邊/ 平台資訊來建立屬於板子的 Kernel  config. 檔. 並且須確保硬體/ 週邊/ 平台功能運行正常.
3. 將新版 Linux Kernel 移植到舊有平台上進行 Kernel 版本升級
  開發人員為任何有興趣的 Maker. 只要有開發版即可進行 (e.g. beagleboard, RPi). 一般來說, Linux Kernel 移植大多屬於此範疇.
  在此階段的移植, 需要根據 dtsi 的版本差異來微調 dts 格式. 此外也需要根據 Kernel 版本差異資訊來微調板子的 Kernel  config. 檔.
  此外也須參照舊有 Kernel source 上的 in-house patch 來修改新版 Kernel source.
  *  另外還有像將 Linux Kernel 移植到全新 CPU architecture 上面這種較罕見的情況.

在移植 Linux Kernel 時, 最重要的第一步就是讓機器可以 ” 開機 “. Kernel 能正常開機往下執行, 我們才能進行後續移植動作.
在無法開機的情況下 (請見下圖), 由於沒有任何錯誤訊息, 所以除錯上會比較困難.
一旦可以開機, 畫面有訊息列印出來, 即便有其他問題, 相對起來也比較好解.

最常遇到開不了機的現象就是 hang 在 “Starting Kernel” 這邊.
在這個階段 bootloader 把 Linux Kernel 載入 Memory 位址 0x80008000, 並將 CPU 控制權交給 Linux Kernel. 此時理因跳轉到 Linux Kernel 第一條指令 [1], 接著 Kernel 開始自解壓縮進行後續開機流程 [2].
如果在這個階段卡住, 代表 Linux Kernel 沒有正確運行, 原因可分成下列幾點

無法開機根因 	可能發生時機 	解決方法
SoC low-level code 有問題 	將 Linux 移植到新 SoC 上 	

修改 low-level code, 並確保 SoC 裡功能可正常運行. 有可能需要在 driver 中以 work-around 手法避掉問題.
舊有 DTS 與 新板 DTSI不相容 	

將新 Linux Kernel 移植到舊有平台上進行Kernel 升級
	閱讀 dtsi git 修改歷程, 並詳細閱讀 “Documentation/devicetree/bindings/” 相關文件.
硬體設計有問題 	

    將 Linux 移植到新 SoC上
    將新 Linux Kernel 移植到全新平台上

	和 Hardware/ Bootloader 部門 R&D 工程師協同合作, 一起看硬體線路除蟲
Console port 設定錯誤 	

    將 Linux 移植到新 SoC上
    將新 Linux Kernel 移植到全新平台上
    將新 Linux Kernel 移植到舊有平台上進行Kernel 升級

	

每一塊板子的 Console port device node 都需根據硬體設計以及 driver 設計來進行設定. 如果設定錯誤, 會導致訊息出不來

一般情況下 console device node 為 ttyS0, baud: 115200
Boot code program (包含bootloader) 與 Kernel 不相容 	

    將 Linux 移植到新 SoC上
    將新 Linux Kernel 移植到全新平台上
    將新 Linux Kernel 移植到舊有平台上進行Kernel 升級

	

需確認 boot code program 版本與 Kernel 版本是相對應的. 尤其有些 SoC 的設計會有多個 boot code program.
DTB 跟 Kernel memory 位址衝突 	

    將 Linux 移植到新 SoC上
    將新 Linux Kernel 移植到全新平台上
    將新 Linux Kernel 移植到舊有平台上進行Kernel 升級

	boot code program 需要注意避免將兩者 memory 位址設太近導致衝突.
DTB 檔跟 Kernel 並不相容 	

    將 Linux 移植到新 SoC上
    將新 Linux Kernel 移植到全新平台上
    將新 Linux Kernel 移植到舊有平台上進行Kernel 升級

	記得重新編譯 Kernel 時, 也要一併重新編譯 DTB. 並確保兩者是成對的.
Kernel config 檔中的 ARCH 相關資訊設定錯誤 	

    將 Linux 移植到新 SoC上
    將新 Linux Kernel 移植到全新平台上
    將新 Linux Kernel 移植到舊有平台上進行Kernel 升級

	確定 SoC 種類, 並到Kernel 選單 –  System Type 中選取對應的選項

reference:
[1] 移植 Linux Kernel 造成無法開機之解決方案以及除錯工具[link](http://szlin.me/2017/05/17/unable-to-boot-with-linux-kernel)




///////////////////////////////////////////////////////////////////////////////

11/08

According to [2], data in a wave file are arranged by channels. For NumChannels = 2; BitsPerSample = 16 - see [1] for the definition of BitsPerSample, the data are arranged as [left channel][right channel][L][R]...
00 00 00 00 
24 17 1e f3 
3c 13 3c 14 
16 f9 18 f9 
34 e7 23 a6 
3c f2 24 f2 
11 ce 1a 0d

In wave file, no such an idea as "frames". 

References:
[1] WAVE PCM soundfile format [link](http://soundfile.sapp.org/doc/WaveFormat/)
(http://stenlyho.blogspot.tw/2015/12/audio-wave-format-specification.html)
[2] Multiple channel audio data and WAVE files [link](https://msdn.microsoft.com/en-us/library/windows/hardware/dn653308(v=vs.85).aspx)
[3] Audio File Format Specifications [link](http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/WAVE/WAVE.html)








///////////////////////////////////////////////////////////////////////////////

11/07

TODO:
0.5 Trace sample_audio.c
1. Feed PCM file to memory, DMA to AIO, and then DA to output
2. Feed PCM file to memory, DMA to AIO, and I2S to HDMI TX 

* Trace option 2: read audio stream from file, decode and send to AO
* SAMPELE_AUDIO_AdecAo();
* SAMPLE_COMM_AUDIO_CfgAcodec();










///////////////////////////////////////////////////////////////////////////////

11/06

arm-hisiv500-linux-objcopy --gap-fill=0xff -O binary u-boot u-boot.bin
osdrv/tools/pc_tools/uboot_tools/
mkboot.sh reg_info.bin u-boot-hi3519v101.bin
# mw.b 0x82000000 ff 0x100000
# tftp 0x82000000 u-boot.bin
# sf probe 0
# sf erase 0x0 0x100000
# sf write 0x82000000 0x0 0x100000


Q: How can GNU toolchain relocate u-boot binary image when linking archive files?

Q: How do I know the address where u-boot stores environment parameters?

BOOT_SEL0

HiTool: using usb-to-serial is better than using on-mainboard uart port.

SW1.3 ->1 bootrom; ->0 

Q: What is the difference between PCM and I2S?
I2S:
  * 4-wire interface: bit clocke (BCLK), left/right clock (LRC), Tx, Rx lines
  * 3 operating modes: I2S, left justfied, right justfied
PCM:
  * 4-wire interface: bit clocke (BCLK), sync (SYNC), Tx, Rx lines
  * 2 operating modes: A and B

references:
1. kernel documentation on Digital Audio Interface [link](Documentation/sound/alsa/soc/DAI.txt)
2. [link](http://blog.csdn.net/azloong/article/details/6536855)


///////////////////////////////////////////////////////////////////////////////
11/03

Q: How to compile a dts file?


Q: Where Kocha code is?
  ap.git/dm365/interface/avm/kocha_*


Q: How to copy to the clipboard in OpenBox?
  Ctrl+Shift+C to copy; mouse mid-button to paste



What causes a 'dirty' revision?
references:
  [1] https://lists.denx.de/pipermail/u-boot/2008-May/034702.html


///////////////////////////////////////////////////////////////////////////////
11/02

Q: v4l2-framework.txt does not talk about video buffer. What else talks about it?

Q: How to use I2S of Si3519V101 and make HDMI out with stereo audio? (Dave)

On the chip, pins relating to I2S input and output are:
AB23: JTAG_EN

AB24: I2S_BCLK_TX
AC23: I2S_WS_TX
AD23: I2S_SD_TX

AC24: I2S_MCLK

AC22: I2S_BCLK_RX
AB21: I2S_WS_RX
AD22: I2S_SD_RX

1. Remove R74 to disable JTAG function
2. Connect to SD0/1/2/3/MCLK/SCK/WS_DR0

Q: How to select pin functions of Si3519V101 (setup pin multiplexing)?

///////////////////////////////////////////////////////////////////////////////



Q: How does a bootloader bring dtb to kernel?
bootm <address> - <>

Q: Must dtb explicitly load via u-boot bootm? This article said dtb can be integrated into uboot or separately loaded [link](http://blog.csdn.net/ooonebook/article/details/53206623)

* Device Tree
  * ARM Linux 2.6，arch/arm/plat-xxx和arch/arm/mach-xxx中充斥着描述板级细节的代码
    * 板上的platform设备、resource、i2c_board_info、spi_board_info以及各种硬件的platform_data。
  * 是一种描述硬件的数据结构
  * 画一棵电路板上CPU、总线、设备组成的树
  * 结点（node）和属性（property）组成
    * 结点本身可包含子结点
    * 属性是成对出现的name和value
  * DTS (device tree source) -> DTC (device tree compiler) -> Device Tree Blob (.dtb) 
  * bootloader将这棵树传递给内核在引导kernel的过程中，会先读取该.dtb到内存。
  * .dtsi: 提炼SoC公用的部分或者多个machine/SoC共同的部分，i代表include



references:
[1] ARM Linux 3.x的设备树（Device Tree）宋宝华 http://blog.csdn.net/21cnbao/article/details/8457546
[2] The Devicetree Specification https://www.devicetree.org/
[3] Thomas Petazzoni, Device Tree for Dummies. Presentation [link](http://free-electrons.com/pub/conferences/2013/elce/petazzoni-device-tree-dummies/petazzoni-device-tree-dummies.pdf); talk for Embedded Linux Conference Europe [link](https://youtu.be/m_NyYEBxfn8)
[4] Device Tree Usage [link](https://elinux.org/Device_Tree_Usage) 
  targeting at how to write a device tree for a new machine
[5] Kernel documentation [link](Documentation/devicetree)
[6] DeviceTree基础 [link](https://lonzoc.gitbooks.io/device-tree-guide/content/devicetree_basic.html)
///////////////////////////////////////////////////////////////////////////////










---------------------------------------------------------------------------------------

sample_tde shows a quarter sized backgroud with some pictures moving around.



---------------------------------------------------------------------------------------
Good resoures: http://free-electrons.com/doc/legacy/


-------------------------------------------------------------------------------








object檔修改工具 - objcopy


-------------------------------------------------------------------------------

## 亂序執行
* out-of-order execution
* aka: OoOE, OOE

ref
* Out-of-order execution [link](https://en.wikipedia.org/wiki/Out-of-order_execution)
* 乱序执行 [link](https://zh.wikipedia.org/wiki/%E4%B9%B1%E5%BA%8F%E6%89%A7%E8%A1%8C)

-------------------------------------------------------------------------------

ref
* http://capricorn-liver.blogspot.tw/2010/11/cbmp.html

-------------------------------------------------------------------------------
## GUID Partition Table
* aka GPT
* a part of the Unified Extensible Firmware Interface (UEFI) standard, as a replacement for the PC BIOS
* MBR (Master boot record) partitioning scheme
  * The original version of the MBR was written by David Litton of IBM in June 1982
  * introduced with IBM PC DOS 2.0 in March 1983 in order to support the 10 MB hard disk of the then-new IBM Personal Computer XT, still using the FAT12 file system
  * use 32 bits for storing block addresses
  * limit: 512 bytes/sector * (2 ^ 32) = 2 ^ 41 = 2 Tbytes maximum

* advantages over the MBR: 
  * use 64 bits for storing block addresses
  * limit: 512 bytes/sector * (2 ^ 64)ons is possible, depending on operating system supports
  * TODO
    
* Major Linux distros support GPT: Fedora above 8, Ubuntu above 8.04+ with tools such as gdisk, GNU Parted, util-linux v2.23+ fdisk, SYSLINUX, GRUB 0.96 + patches and GRUB 2 have been GPT-enabled.
  * kernel config CONFIG_EFI_PARTITION option enables GPT support in the kernel
    
  * command "blkid"
  * command "gdisk"
  * command "lsblk"
  
* ref
  * wiki MBR [link](https://en.wikipedia.org/wiki/Master_boot_record)
  * wiki GPT [link](https://en.wikipedia.org/wiki/GUID_Partition_Table)
  * k-M-G-T-P-E-Z-Y [link](http://ioanaspune.ro/wp-content/uploads/2015/03/tabel-1014x1024.jpg)
  * GPT kernel support [link](https://wiki.archlinux.org/index.php/partitioning#GPT_Kernel_Support)
  * TI Linux Core U-Boot User's Guide talking about how to use u-boot to make a GPT eMMC and boot from it [link](http://processors.wiki.ti.com/index.php/Linux_Core_U-Boot_User%27s_Guide)
  
///////////////////////////////////////////////////////////////////////////
## File System
  
There are currently two NTFS drivers available for Linux. The NTFS driver included in the kernel, and the userspace NTFS-3G driver that makes use of FUSE.

由 Tuxera 公司開發並維護的開源項目
為 Linux 提供 NTFS 分區的的驅動程式
2007年2月21日宣布NTFS-3G 1.0 釋出

* ref
  * Kernel NTFS driver vs NTFS-3G [link](https://superuser.com/questions/139452/kernel-ntfs-driver-vs-ntfs-3g)
  * 筆記 linux-support-ntfs-by-ntfs-3g [link](http://paul.pixnet.net/blog/post/11120651-%5B%E7%AD%86%E8%A8%98%5Dlinux-support-ntfs-by-ntfs-3g)
  
http://felix-lin.com/linux/kernel-ntfs-driver-and-ntfs-3g/

///////////////////////////////////////////////////////////////////////////












---------------------------------------------------------------------------------------

How to modify git site




---------------------------------------------------------------------------------------








Download the source
    https://gstreamer.freedesktop.org/download/

./configure CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnurabi-g++ --host=arm-linux --build=i686-linux --prefix=/home/kclin/workspace/cross_result/pkg_config/ RANLIB=arm-linux-gnueabi-ranlib LD=arm-linux-gnueabi-ld --cache-file=arm-linux.cache LIBS="-L/home/kclin/workspace/cross_result/pkg_config/lib -lffi" CFLAGS="-I/home/kclin/workspace/cross_result/pkg_config/lib/libffi-3.0.13/include -I/home/kclin/workspace/cross_result/pkg_config/include"

make && make install



make OSDRV_CROSS=arm-hisiv500-linux CHIP=hi3519v101 FLASH_TYPE=spi all


a003257@ubuntu:~/avm/T533C$ ./sdk.unpack 
Unpacking SDK
WARN: Be sure you have installed the cross-compiler. if not, install it first!
WARN: ALL THE SOUCE FILES WILL BE OVERWRITED, FILES YOU MOTIFIED WILL BE LOST !!!

OS_TYPE  =linux
SDK_CHIP =hi3519v101
CUSTOMER_VERSION =
unpacking osal
run_command_progress_float: 'tar -xvzf package/osal.tgz'
[100%]##################################################|
unpacking osdrv
run_command_progress_float: 'tar -xvzf package/osdrv.tgz'
[100%]##################################################|
unpacking linux kernel
run_command_progress_float: 'tar -xvzf osdrv/opensource/kernel/linux-3.18.y.tgz -C osdrv/opensource/kernel/'
[100%]##################################################|
unpacking mpp_big-little
mkdir: created directory 'mpp_big-little'
run_command_progress_float: 'tar -xvzf package/mpp_big-little.tgz'
[100%]##################################################|
unpacking drv
mkdir: created directory 'drv'
run_command_progress_float: 'tar -xvzf package/drv.tgz'
[100%]##################################################|




hisilicon # printenv
bootdelay=1
baudrate=115200
bootfile="uImage"
filesize=4B9D7C
fileaddr=82000000
netmask=255.255.255.0
bootargs=mem=64M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs)
bootcmd=sf probe 0;sf read 0x82000000 0x100000 0x300000;bootm 0x82000000

serverip=10.1.9.108
nfshost=10.1.9.108
ipaddr=10.1.9.124
gatewayip=10.1.9.254
ethaddr=00:00:23:34:45:66

stdin=serial
stdout=serial
stderr=serial
verify=n
ver=U-Boot 2010.06 (Nov 30 2016 - 19:59:33)




setenv bootargs mem=64M console=ttyAMA0,115200 


setenv bootargs mem=64M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs) ip=dhcp


setenv bootargs mem=32M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs) ip=dhcp


set bootcmd 'sf probe 0;sf read 0x82000000 0x100000 0x300000;bootm 0x82000000'
set bootargs 'mem=64M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs) ip=dhcp'
set ipaddr 192.168.0.50
set serverip 192.168.0.100


---------------------------------------------------------------------------------------


hisilicon # printenv
bootdelay=1
baudrate=115200
bootfile="uImage"
filesize=4B9D7C
fileaddr=82000000
netmask=255.255.255.0
bootargs=mem=64M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs)
bootcmd=sf probe 0;sf read 0x82000000 0x100000 0x300000;bootm 0x82000000
serverip=10.1.9.108
nfshost=10.1.9.108
ipaddr=10.1.9.124
gatewayip=10.1.9.254
ethaddr=00:00:23:34:45:66
stdin=serial
stdout=serial
stderr=serial
verify=n
ver=U-Boot 2010.06 (Nov 30 2016 - 19:59:33)




setenv bootargs mem=64M console=ttyAMA0,115200 


setenv bootargs mem=64M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs) ip=dhcp

setenv bootargs mem=32M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 rw mtdparts=hi_sfc:1M(boot),3M(kernel),28M(rootfs) ip=dhcp






sample/vio/sample_vio.c

__HuaweiLite__ is NOT used.

VO_INTF g_enVoIntfType video output interafce type

SAMPLE_VI_CONFIG_S video input configuration type

SENSOR_TYPE is defined in sample/Makefile.param

struct is typedefined as _S.





